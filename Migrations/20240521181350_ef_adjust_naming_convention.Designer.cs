// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TelegramBudget.Data;

#nullable disable

namespace TelegramBudget.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240521181350_ef_adjust_naming_convention")]
    partial class ef_adjust_naming_convention
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TelegramBudget.Data.Entities.Budget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_budget");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("ix_budget_created_by");

                    b.HasIndex("Name", "CreatedBy")
                        .IsUnique()
                        .HasDatabaseName("ix_budget_name_created_by");

                    b.ToTable("budget", (string)null);
                });

            modelBuilder.Entity("TelegramBudget.Data.Entities.Participant", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<Guid>("BudgetId")
                        .HasColumnType("uuid")
                        .HasColumnName("budget_id");

                    b.HasKey("UserId", "BudgetId")
                        .HasName("pk_participant");

                    b.HasIndex("BudgetId")
                        .HasDatabaseName("ix_participant_budget_id");

                    b.ToTable("participant", (string)null);
                });

            modelBuilder.Entity("TelegramBudget.Data.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<Guid>("BudgetId")
                        .HasColumnType("uuid")
                        .HasColumnName("budget_id");

                    b.Property<string>("Comment")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<int>("MessageId")
                        .HasColumnType("integer")
                        .HasColumnName("message_id");

                    b.HasKey("Id")
                        .HasName("pk_transaction");

                    b.HasIndex("BudgetId")
                        .HasDatabaseName("ix_transaction_budget_id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("ix_transaction_created_at");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("ix_transaction_created_by");

                    b.HasIndex("CreatedBy", "MessageId")
                        .IsUnique()
                        .HasDatabaseName("ix_transaction_created_by_message_id");

                    b.ToTable("transaction", (string)null);
                });

            modelBuilder.Entity("TelegramBudget.Data.Entities.Transaction+Version", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Number"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid")
                        .HasColumnName("entity_id");

                    b.Property<string>("Serialized")
                        .HasColumnType("text")
                        .HasColumnName("serialized");

                    b.HasKey("Number")
                        .HasName("pk_transaction_version");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("ix_transaction_version_created_at");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("ix_transaction_version_created_by");

                    b.HasIndex("EntityId")
                        .HasDatabaseName("ix_transaction_version_entity_id");

                    b.ToTable("transaction_version", (string)null);
                });

            modelBuilder.Entity("TelegramBudget.Data.Entities.TransactionConfirmation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("MessageId")
                        .HasColumnType("integer")
                        .HasColumnName("message_id");

                    b.Property<long>("RecipientId")
                        .HasColumnType("bigint")
                        .HasColumnName("recipient_id");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uuid")
                        .HasColumnName("transaction_id");

                    b.HasKey("Id")
                        .HasName("pk_transaction_confirmation");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("ix_transaction_confirmation_created_at");

                    b.HasIndex("RecipientId")
                        .HasDatabaseName("ix_transaction_confirmation_recipient_id");

                    b.HasIndex("TransactionId")
                        .HasDatabaseName("ix_transaction_confirmation_transaction_id");

                    b.HasIndex("MessageId", "RecipientId")
                        .IsUnique()
                        .HasDatabaseName("ix_transaction_confirmation_message_id_recipient_id");

                    b.ToTable("transaction_confirmation", (string)null);
                });

            modelBuilder.Entity("TelegramBudget.Data.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<Guid?>("ActiveBudgetId")
                        .HasColumnType("uuid")
                        .HasColumnName("active_budget_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<int?>("PromptMessageId")
                        .HasColumnType("integer")
                        .HasColumnName("prompt_message_id");

                    b.Property<int?>("PromptSubject")
                        .HasColumnType("integer")
                        .HasColumnName("prompt_subject");

                    b.Property<TimeSpan>("TimeZone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("interval")
                        .HasDefaultValue(new TimeSpan(0, 0, 0, 0, 0))
                        .HasColumnName("time_zone");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.HasIndex("ActiveBudgetId")
                        .HasDatabaseName("ix_user_active_budget_id");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("TelegramBudget.Data.Entities.Budget", b =>
                {
                    b.HasOne("TelegramBudget.Data.Entities.User", "Owner")
                        .WithMany("OwnedBudgets")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_budget_user_created_by");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("TelegramBudget.Data.Entities.Participant", b =>
                {
                    b.HasOne("TelegramBudget.Data.Entities.Budget", "Budget")
                        .WithMany("Participating")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_participant_budget_budget_id");

                    b.HasOne("TelegramBudget.Data.Entities.User", "User")
                        .WithMany("Participating")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_participant_user_user_id");

                    b.Navigation("Budget");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TelegramBudget.Data.Entities.Transaction", b =>
                {
                    b.HasOne("TelegramBudget.Data.Entities.Budget", "Budget")
                        .WithMany("Transactions")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transaction_budget_budget_id");

                    b.HasOne("TelegramBudget.Data.Entities.User", "Author")
                        .WithMany("Transactions")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_transaction_user_created_by");

                    b.Navigation("Author");

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("TelegramBudget.Data.Entities.TransactionConfirmation", b =>
                {
                    b.HasOne("TelegramBudget.Data.Entities.User", "Recipient")
                        .WithMany("TransactionConfirmations")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transaction_confirmation_user_recipient_id");

                    b.HasOne("TelegramBudget.Data.Entities.Transaction", "Transaction")
                        .WithMany("Confirmations")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transaction_confirmation_transaction_transaction_id");

                    b.Navigation("Recipient");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("TelegramBudget.Data.Entities.User", b =>
                {
                    b.HasOne("TelegramBudget.Data.Entities.Budget", "ActiveBudget")
                        .WithMany("ActiveUsers")
                        .HasForeignKey("ActiveBudgetId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_user_budget_active_budget_id");

                    b.Navigation("ActiveBudget");
                });

            modelBuilder.Entity("TelegramBudget.Data.Entities.Budget", b =>
                {
                    b.Navigation("ActiveUsers");

                    b.Navigation("Participating");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("TelegramBudget.Data.Entities.Transaction", b =>
                {
                    b.Navigation("Confirmations");
                });

            modelBuilder.Entity("TelegramBudget.Data.Entities.User", b =>
                {
                    b.Navigation("OwnedBudgets");

                    b.Navigation("Participating");

                    b.Navigation("TransactionConfirmations");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
